def business_metric(ex, pred, trace=None, **_):
    # 1) exact match reward
    gt_code = (str(ex.get("target_code","")) or "").strip().lower()
    pr_code = (str(getattr(pred, "new_loss_code", "") or "")).strip().lower()
    base = 1.0 if gt_code and pr_code and gt_code == pr_code else 0.0

    # 2) decode predicted action
    action = (getattr(pred, "action", "") or "").strip().lower()  # apply | keep_old | needs_review

    # 3) business context
    final_denied = bool(ex.get("final_denied", False))
    adj_updated  = bool(ex.get("adj_updated", False))
    cand_has_true = bool(ex.get("candidates_contains_true", True))

    penalty = 0.0

    # Heavily penalize "updated and denied (new not covered)" events
    if action == "apply" and final_denied and (not cand_has_true):
        penalty += 2.0  # increased penalty to strongly push away from this outcome

    # Penalize "AAE, Adj updated and denied", but less (you asked to keep this same)
    if action == "apply" and final_denied and adj_updated:
        penalty += 0.25

    # Light general penalty when we apply but are wrong (encourages abstain/keep_old)
    if action == "apply" and base == 0.0:
        penalty += 0.15

    # Slight reward for abstaining (needs_review) on risky cases:
    abstain_bonus = 0.0
    if action == "needs_review" and final_denied and (not cand_has_true):
        abstain_bonus += 0.10

    # Compose score (clip to [0,1])
    score = max(0.0, min(1.0, base - penalty + abstain_bonus))
    return score
